/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * ActiveCampaign API v3
 * OpenAPI spec version: 1.0
 */
import { z as zod } from 'zod';

/**
 * @summary Create a deal
 */
export const createadealBody = zod.object({
  deal: zod.object({
    contact: zod.string(),
    account: zod.string(),
    description: zod.string(),
    currency: zod.string(),
    group: zod.string(),
    owner: zod.string(),
    percent: zod.string().nullable(),
    stage: zod.string(),
    status: zod.number(),
    title: zod.string(),
    value: zod.number(),
    fields: zod.array(
      zod.object({
        customFieldId: zod.number(),
        fieldValue: zod.union([zod.string(), zod.number()]),
        fieldCurrency: zod.string().optional(),
      }),
    ),
  }),
});

/**
 * @summary Create a deal note
 */
export const createadealnoteParams = zod.object({
  id: zod.string().describe('Id of the deal note will be added to'),
});

export const createadealnoteBody = zod.object({
  note: zod.object({
    note: zod.string(),
  }),
});

/**
 * @summary Retrieve a deal
 */
export const retrieveadealParams = zod.object({
  id: zod.string(),
});

/**
 * @summary Delete a deal
 */
export const deleteadealParams = zod.object({
  id: zod.string(),
});

/**
 * @summary Update a deal
 */
export const updateadealParams = zod.object({
  id: zod.string().describe('id of the deal to be updated'),
});

export const updateadealBody = zod.object({
  deal: zod.object({
    contact: zod.string(),
    account: zod.string(),
    description: zod.string(),
    currency: zod.string(),
    group: zod.string(),
    owner: zod.string(),
    percent: zod.string().nullable(),
    stage: zod.string(),
    status: zod.number(),
    title: zod.string(),
    value: zod.number(),
    fields: zod.array(
      zod.object({
        customFieldId: zod.number(),
        fieldValue: zod.union([zod.string(), zod.number()]),
        fieldCurrency: zod.string().optional(),
      }),
    ),
  }),
});

/**
 * @summary Update a deal note
 */
export const updateadealnoteParams = zod.object({
  dealId: zod.string().describe('Id of the deal note is assigned to'),
  noteId: zod.string().describe('Id of the note'),
});

export const updateadealnoteBody = zod.object({
  note: zod.object({
    note: zod.string(),
  }),
});

/**
 * @summary Bulk update deal owners
 */
export const bulkupdatedealownersBody = zod.object({
  deals: zod.array(
    zod.object({
      id: zod.number(),
      ownerId: zod.number(),
    }),
  ),
});
