/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * ActiveCampaign API v3
 * OpenAPI spec version: 1.0
 */
import * as axios from 'axios';
import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
  BulkupdatedealownersRequest,
  CreateadealRequest,
  CreateadealnoteRequest,
  UpdateadealRequest,
  UpdateadealnoteRequest,
} from '../api.schemas';

export const getDeals = () => {
  /**
   * @summary Create a deal
   */
  const createadeal = <TData = AxiosResponse<null>>(
    createadealRequest: CreateadealRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .post(`/deals`, createadealRequest, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Retrieve all deals
   */
  const retrievealldeals = <TData = AxiosResponse<null>>(
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(`/deals`, options).then((res) => {
      if (res.data === '') res.data = null;
      return res as TData;
    });
  };
  /**
   * @summary Create a deal note
   */
  const createadealnote = <TData = AxiosResponse<null>>(
    id: string,
    createadealnoteRequest: CreateadealnoteRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .post(`/deals/${id}/notes`, createadealnoteRequest, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Retrieve a deal
   */
  const retrieveadeal = <TData = AxiosResponse<null>>(
    id: string,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(`/deals/${id}`, options).then((res) => {
      if (res.data === '') res.data = null;
      return res as TData;
    });
  };
  /**
   * @summary Delete a deal
   */
  const deleteadeal = <TData = AxiosResponse<null>>(
    id: string,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.delete(`/deals/${id}`, options).then((res) => {
      if (res.data === '') res.data = null;
      return res as TData;
    });
  };
  /**
   * @summary Update a deal
   */
  const updateadeal = <TData = AxiosResponse<null>>(
    id: string,
    updateadealRequest: UpdateadealRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .put(`/deals/${id}`, updateadealRequest, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Update a deal note
   */
  const updateadealnote = <TData = AxiosResponse<null>>(
    dealId: string,
    noteId: string,
    updateadealnoteRequest: UpdateadealnoteRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .put(`/deals/${dealId}/notes/${noteId}`, updateadealnoteRequest, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Bulk update deal owners
   */
  const bulkupdatedealowners = <TData = AxiosResponse<null>>(
    bulkupdatedealownersRequest: BulkupdatedealownersRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .patch(`/deals/bulkUpdate`, bulkupdatedealownersRequest, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  return {
    createadeal,
    retrievealldeals,
    createadealnote,
    retrieveadeal,
    deleteadeal,
    updateadeal,
    updateadealnote,
    bulkupdatedealowners,
  };
};
export type CreateadealResult = AxiosResponse<null>;
export type RetrievealldealsResult = AxiosResponse<null>;
export type CreateadealnoteResult = AxiosResponse<null>;
export type RetrieveadealResult = AxiosResponse<null>;
export type DeleteadealResult = AxiosResponse<null>;
export type UpdateadealResult = AxiosResponse<null>;
export type UpdateadealnoteResult = AxiosResponse<null>;
export type BulkupdatedealownersResult = AxiosResponse<null>;
