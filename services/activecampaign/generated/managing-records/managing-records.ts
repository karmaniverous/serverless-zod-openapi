/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * ActiveCampaign API v3
 * OpenAPI spec version: 1.0
 */
import type {
  CreatearecordRequest,
  GetalistofrecordsParams,
} from '../api.schemas';

import { orvalMutator } from '../../../../packages/cached-axios/src/mutator';

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getManagingRecords = () => {
  /**
   * @summary Get a list of records
   */
  const getalistofrecords = (
    schemaId: string,
    params: GetalistofrecordsParams,
    options?: SecondParameter<typeof orvalMutator>,
  ) => {
    return orvalMutator<null>(
      { url: `/customObjects/records/${schemaId}`, method: 'GET', params },
      options,
    );
  };
  /**
   * @summary Create a record
   */
  const createarecord = (
    schemaId: string,
    createarecordRequest: CreatearecordRequest,
    options?: SecondParameter<typeof orvalMutator>,
  ) => {
    return orvalMutator<null>(
      {
        url: `/customObjects/records/${schemaId}`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: createarecordRequest,
      },
      options,
    );
  };
  /**
   * @summary Get record by id
   */
  const getrecordbyid = (
    schemaId: string,
    recordId: string,
    options?: SecondParameter<typeof orvalMutator>,
  ) => {
    return orvalMutator<null>(
      {
        url: `/.activehosted.com/api/3/customObjects/records/${schemaId}/${recordId}`,
        method: 'GET',
      },
      options,
    );
  };
  /**
   * @summary Delete record by id
   */
  const deleterecordbyid = (
    schemaId: string,
    recordId: string,
    options?: SecondParameter<typeof orvalMutator>,
  ) => {
    return orvalMutator<null>(
      {
        url: `/customObjects/records/${schemaId}/${recordId}`,
        method: 'DELETE',
      },
      options,
    );
  };
  /**
   * @summary Get record by external id
   */
  const getrecordbyexternalid = (
    schemaId: string,
    externalId: string,
    options?: SecondParameter<typeof orvalMutator>,
  ) => {
    return orvalMutator<null>(
      {
        url: `/customObjects/records/${schemaId}/external/${externalId}`,
        method: 'GET',
      },
      options,
    );
  };
  /**
   * @summary Delete record by external id
   */
  const deleterecordbyexternalid = (
    schemaId: string,
    externalId: string,
    options?: SecondParameter<typeof orvalMutator>,
  ) => {
    return orvalMutator<null>(
      {
        url: `/customObjects/records/${schemaId}/external/${externalId}`,
        method: 'DELETE',
      },
      options,
    );
  };
  return {
    getalistofrecords,
    createarecord,
    getrecordbyid,
    deleterecordbyid,
    getrecordbyexternalid,
    deleterecordbyexternalid,
  };
};

type AwaitedInput<T> = PromiseLike<T> | T;

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

export type GetalistofrecordsResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getManagingRecords>['getalistofrecords']>
  >
>;
export type CreatearecordResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getManagingRecords>['createarecord']>>
>;
export type GetrecordbyidResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getManagingRecords>['getrecordbyid']>>
>;
export type DeleterecordbyidResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getManagingRecords>['deleterecordbyid']>>
>;
export type GetrecordbyexternalidResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getManagingRecords>['getrecordbyexternalid']>
  >
>;
export type DeleterecordbyexternalidResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getManagingRecords>['deleterecordbyexternalid']
    >
  >
>;
