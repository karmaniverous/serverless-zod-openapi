/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * ActiveCampaign API v3
 * OpenAPI spec version: 1.0
 */
import type { AxiosRequestConfig, AxiosResponse } from 'axios';
import * as axios from 'axios';

import type {
  CreatearecordRequest,
  GetalistofrecordsParams,
} from '../api.schemas';

export const getManagingRecords = () => {
  /**
   * @summary Get a list of records
   */
  const getalistofrecords = <TData = AxiosResponse<null>>(
    schemaId: string,
    params: GetalistofrecordsParams,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/customObjects/records/${schemaId}`, {
        ...options,
        params: { ...params, ...options?.params },
      })
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Create a record
   */
  const createarecord = <TData = AxiosResponse<null>>(
    schemaId: string,
    createarecordRequest: CreatearecordRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .post(`/customObjects/records/${schemaId}`, createarecordRequest, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get record by id
   */
  const getrecordbyid = <TData = AxiosResponse<null>>(
    schemaId: string,
    recordId: string,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(
        `/.activehosted.com/api/3/customObjects/records/${schemaId}/${recordId}`,
        options,
      )
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Delete record by id
   */
  const deleterecordbyid = <TData = AxiosResponse<null>>(
    schemaId: string,
    recordId: string,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .delete(`/customObjects/records/${schemaId}/${recordId}`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get record by external id
   */
  const getrecordbyexternalid = <TData = AxiosResponse<null>>(
    schemaId: string,
    externalId: string,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/customObjects/records/${schemaId}/external/${externalId}`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Delete record by external id
   */
  const deleterecordbyexternalid = <TData = AxiosResponse<null>>(
    schemaId: string,
    externalId: string,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .delete(
        `/customObjects/records/${schemaId}/external/${externalId}`,
        options,
      )
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  return {
    getalistofrecords,
    createarecord,
    getrecordbyid,
    deleterecordbyid,
    getrecordbyexternalid,
    deleterecordbyexternalid,
  };
};
export type GetalistofrecordsResult = AxiosResponse<null>;
export type CreatearecordResult = AxiosResponse<null>;
export type GetrecordbyidResult = AxiosResponse<null>;
export type DeleterecordbyidResult = AxiosResponse<null>;
export type GetrecordbyexternalidResult = AxiosResponse<null>;
export type DeleterecordbyexternalidResult = AxiosResponse<null>;
