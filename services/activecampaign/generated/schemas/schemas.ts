/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * ActiveCampaign API v3
 * OpenAPI spec version: 1.0
 */
import type { CreateSchemaRequest, UpdateSchemaRequest } from '../api.schemas';

import { orvalMutator } from '../../src/orval.mutator';

export const getSchemas = () => {
  /**
   * @summary List all schemas
   */
  const listallschemas = () => {
    return orvalMutator<null>({ url: `/customObjects/schemas`, method: 'GET' });
  };
  /**
   * @summary Create Schema
   */
  const createSchema = (createSchemaRequest: CreateSchemaRequest) => {
    return orvalMutator<null>({
      url: `/customObjects/schemas`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: createSchemaRequest,
    });
  };
  /**
   * @summary Listing records for a Schema
   */
  const listingrecordsforaSchema = (schemaID: string) => {
    return orvalMutator<unknown>({
      url: `/customObjects/records/${schemaID}`,
      method: 'GET',
    });
  };
  /**
   * @summary Update Schema
   */
  const updateSchema = (
    schemaId: string,
    updateSchemaRequest: UpdateSchemaRequest,
  ) => {
    return orvalMutator<null>({
      url: `/customObjects/schemas/${schemaId}`,
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      data: updateSchemaRequest,
    });
  };
  /**
   * @summary Get Schema by ID
   */
  const getSchemabyID = (schemaId: string) => {
    return orvalMutator<null>({
      url: `/customObjects/schemas/${schemaId}`,
      method: 'GET',
    });
  };
  /**
   * @summary Delete Schema
   */
  const deleteSchema = (schemaId: string) => {
    return orvalMutator<null>({
      url: `/customObjects/schemas/${schemaId}`,
      method: 'DELETE',
    });
  };
  return {
    listallschemas,
    createSchema,
    listingrecordsforaSchema,
    updateSchema,
    getSchemabyID,
    deleteSchema,
  };
};
export type ListallschemasResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSchemas>['listallschemas']>>
>;
export type CreateSchemaResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSchemas>['createSchema']>>
>;
export type ListingrecordsforaSchemaResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSchemas>['listingrecordsforaSchema']>>
>;
export type UpdateSchemaResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSchemas>['updateSchema']>>
>;
export type GetSchemabyIDResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSchemas>['getSchemabyID']>>
>;
export type DeleteSchemaResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSchemas>['deleteSchema']>>
>;
