/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * ActiveCampaign API v3
 * OpenAPI spec version: 1.0
 */
import type { CreateGroupRequest } from '../api.schemas';

import { orvalMutator } from '../../../../packages/cached-axios/src/mutator';

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getGroups = () => {
  /**
   * @summary Get Groups
   */
  const getGroups = (options?: SecondParameter<typeof orvalMutator>) => {
    return orvalMutator<null>({ url: `/groups`, method: 'GET' }, options);
  };
  /**
   * @summary Create Group
   */
  const createGroup = (
    createGroupRequest: CreateGroupRequest,
    options?: SecondParameter<typeof orvalMutator>,
  ) => {
    return orvalMutator<null>(
      {
        url: `/groups`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: createGroupRequest,
      },
      options,
    );
  };
  /**
   * @summary Get Group Limits
   */
  const getGroupLimits = (options?: SecondParameter<typeof orvalMutator>) => {
    return orvalMutator<null>({ url: `/groupLimits`, method: 'GET' }, options);
  };
  /**
   * @summary Get Group By ID
   */
  const getGroupByID = (
    groupId: number,
    options?: SecondParameter<typeof orvalMutator>,
  ) => {
    return orvalMutator<null>(
      { url: `/groups/${groupId}`, method: 'GET' },
      options,
    );
  };
  /**
   * @summary Get Users By Group
   */
  const getUsersByGroup = (
    groupId: number,
    options?: SecondParameter<typeof orvalMutator>,
  ) => {
    return orvalMutator<null>(
      { url: `/groups/${groupId}/userGroups`, method: 'GET' },
      options,
    );
  };
  return {
    getGroups,
    createGroup,
    getGroupLimits,
    getGroupByID,
    getUsersByGroup,
  };
};

type AwaitedInput<T> = PromiseLike<T> | T;

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

export type GetGroupsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getGroups>['getGroups']>>
>;
export type CreateGroupResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getGroups>['createGroup']>>
>;
export type GetGroupLimitsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getGroups>['getGroupLimits']>>
>;
export type GetGroupByIDResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getGroups>['getGroupByID']>>
>;
export type GetUsersByGroupResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getGroups>['getUsersByGroup']>>
>;
