/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * ActiveCampaign API v3
 * OpenAPI spec version: 1.0
 */
import type { AxiosRequestConfig, AxiosResponse } from 'axios';
import * as axios from 'axios';

import type {
  CreateanewEventNameOnlyRequest,
  TrackEventBody,
} from '../api.schemas';

export const getSiteEventTracking = () => {
  /**
   * @summary Create a new Event (Name Only)
   */
  const createanewEventNameOnly = <TData = AxiosResponse<null>>(
    createanewEventNameOnlyRequest: CreateanewEventNameOnlyRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .post(`/eventTrackingEvents`, createanewEventNameOnlyRequest, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary List All Events (Name Only)
   */
  const listAllEventsNameOnly = <TData = AxiosResponse<null>>(
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(`/eventTrackingEvents`, options).then((res) => {
      if (res.data === '') res.data = null;
      return res as TData;
    });
  };
  /**
   * @summary Track Event
   */
  const trackEvent = <TData = AxiosResponse<null>>(
    trackEventBody?: TrackEventBody,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    const formUrlEncoded = new URLSearchParams();
    if (trackEventBody?.actid !== undefined) {
      formUrlEncoded.append(`actid`, trackEventBody.actid.toString());
    }
    if (trackEventBody?.key !== undefined) {
      formUrlEncoded.append(`key`, trackEventBody.key);
    }
    if (trackEventBody?.event !== undefined) {
      formUrlEncoded.append(`event`, trackEventBody.event);
    }
    if (trackEventBody?.eventdata !== undefined) {
      formUrlEncoded.append(`eventdata`, trackEventBody.eventdata);
    }
    if (trackEventBody?.visit !== undefined) {
      formUrlEncoded.append(`visit`, JSON.stringify(trackEventBody.visit));
    }

    return axios.default.post(`/event`, formUrlEncoded, options).then((res) => {
      if (res.data === '') res.data = null;
      return res as TData;
    });
  };
  return { createanewEventNameOnly, listAllEventsNameOnly, trackEvent };
};
export type CreateanewEventNameOnlyResult = AxiosResponse<null>;
export type ListAllEventsNameOnlyResult = AxiosResponse<null>;
export type TrackEventResult = AxiosResponse<null>;
