/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * ActiveCampaign API v3
 * OpenAPI spec version: 1.0
 */
import { z as zod } from 'zod';

/**
 * @summary Create Contact
 */
export const createContactBody = zod.object({
  contact: zod.object({
    email: zod.string(),
    firstName: zod.string(),
    lastName: zod.string(),
    phone: zod.string(),
  }),
});

/**
 * @summary Get Contact by ID
 */
export const getContactbyIDParams = zod.object({
  contactId: zod.string(),
});

/**
 * @summary Delete Contact
 */
export const deleteContactParams = zod.object({
  contactId: zod.number(),
});

/**
 * @summary Get Contact Data
 */
export const getContactDataParams = zod.object({
  contactId: zod.number(),
});

/**
 * @summary Get Contact Tags
 */
export const getContactTagsParams = zod.object({
  contactId: zod.number(),
});

/**
 * @summary Get Contact Bounce Logs
 */
export const getContactBounceLogsParams = zod.object({
  contactId: zod.number(),
});

/**
 * @summary Get Contact Data Goals
 */
export const getContactDataGoalsParams = zod.object({
  contactId: zod.number(),
});

/**
 * @summary Get Contact Lists
 */
export const getContactListsParams = zod.object({
  contactId: zod.number(),
});

/**
 * @summary Get Contact Logs
 */
export const getContactLogsParams = zod.object({
  contactId: zod.number(),
});

/**
 * @summary Get Contact Deal List
 */
export const getContactDealListParams = zod.object({
  contactId: zod.number(),
});

/**
 * @summary Get Contact Deals
 */
export const getContactDealsParams = zod.object({
  contactId: zod.number(),
});

/**
 * @summary Get Contact Field Values
 */
export const getContactFieldValuesParams = zod.object({
  contactId: zod.number(),
});

/**
 * @summary Get Contact Geo Ips
 */
export const getContactGeoIpsParams = zod.object({
  contactId: zod.number(),
});

/**
 * @summary Get Contact Notes
 */
export const getContactNotesParams = zod.object({
  contactId: zod.number(),
});

/**
 * @summary Get Contact Organization
 */
export const getContactOrganizationParams = zod.object({
  contactId: zod.number(),
});

/**
 * @summary Get Contact Account Contacts
 */
export const getContactAccountContactsParams = zod.object({
  contactId: zod.number(),
});

/**
 * @summary Get Contact Automation Entry Counts
 */
export const getContactAutomationEntryCountsParams = zod.object({
  contactId: zod.number(),
});

/**
 * @summary Get Contact Plus Append
 */
export const getContactPlusAppendParams = zod.object({
  contactId: zod.number(),
});

/**
 * @summary Get Contact Tracking Logs
 */
export const getContactTrackingLogsParams = zod.object({
  contactId: zod.number(),
});

/**
 * @summary Sync Contact Data
 */
export const syncContactDataBody = zod.object({
  contact: zod.object({
    email: zod.string(),
    firstName: zod.string(),
    lastName: zod.string(),
    phone: zod.string(),
    fieldValues: zod.array(
      zod.object({
        field: zod.string(),
        value: zod.string(),
      }),
    ),
  }),
});

/**
 * @summary Add contact to list
 */
export const addcontacttolistHeader = zod.object({
  'Api-Token': zod.string(),
});

export const addcontacttolistBody = zod.object({
  contactList: zod.object({
    list: zod.number(),
    contact: zod.number(),
    status: zod.number(),
  }),
});

/**
 * @summary Bulk Import
 */
export const bulkImportBody = zod.object({
  contacts: zod.array(
    zod.object({
      email: zod.string(),
      first_name: zod.string(),
      last_name: zod.string(),
      phone: zod.string(),
      tags: zod.array(zod.string()),
      fields: zod.array(
        zod.object({
          id: zod.number(),
          value: zod.string(),
        }),
      ),
      subscribe: zod.array(
        zod.object({
          listid: zod.number(),
        }),
      ),
      unsubscribe: zod.string().nullable(),
    }),
  ),
  callback: zod.string().nullable(),
});

/**
 * @summary Bulk Import Status Info
 */
export const bulkImportStatusInfoQueryParams = zod.object({
  batchId: zod.string(),
});
