/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * ActiveCampaign API v3
 * OpenAPI spec version: 1.0
 */
import * as axios from 'axios';
import type { AxiosRequestConfig, AxiosResponse } from 'axios';

import type {
  AddcontacttolistRequest,
  BulkImportRequest,
  BulkImportStatusInfoParams,
  CreateContactRequest,
  SyncContactDataRequest,
} from '../api.schemas';

export const getContacts = () => {
  /**
   * @summary Get Contacts
   */
  const getContacts = <TData = AxiosResponse<null>>(
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(`/contacts`, options).then((res) => {
      if (res.data === '') res.data = null;
      return res as TData;
    });
  };
  /**
   * @summary Create Contact
   */
  const createContact = <TData = AxiosResponse<null>>(
    createContactRequest: CreateContactRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .post(`/contacts`, createContactRequest, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get Contact by ID
   */
  const getContactbyID = <TData = AxiosResponse<null>>(
    contactId: string,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(`/contacts/${contactId}`, options).then((res) => {
      if (res.data === '') res.data = null;
      return res as TData;
    });
  };
  /**
   * @summary Delete Contact
   */
  const deleteContact = <TData = AxiosResponse<null>>(
    contactId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .delete(`/contacts/${contactId}`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get Contact Data
   */
  const getContactData = <TData = AxiosResponse<null>>(
    contactId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/contacts/${contactId}/contactData`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get Contact Tags
   */
  const getContactTags = <TData = AxiosResponse<null>>(
    contactId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/contacts/${contactId}/contactTags`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get Contact Bounce Logs
   */
  const getContactBounceLogs = <TData = AxiosResponse<null>>(
    contactId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/contacts/${contactId}/bounceLogs`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get Contact Data Goals
   */
  const getContactDataGoals = <TData = AxiosResponse<null>>(
    contactId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/contacts/${contactId}/contactGoals`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get Contact Lists
   */
  const getContactLists = <TData = AxiosResponse<null>>(
    contactId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/contacts/${contactId}/contactLists`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get Contact Logs
   */
  const getContactLogs = <TData = AxiosResponse<null>>(
    contactId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/contacts/${contactId}/contactLogs`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get Contact Deal List
   */
  const getContactDealList = <TData = AxiosResponse<null>>(
    contactId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/contacts/${contactId}/contactDeals`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get Contact Deals
   */
  const getContactDeals = <TData = AxiosResponse<null>>(
    contactId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/contacts/${contactId}/deals`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get Contact Field Values
   */
  const getContactFieldValues = <TData = AxiosResponse<null>>(
    contactId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/contacts/${contactId}/fieldValues`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get Contact Geo Ips
   */
  const getContactGeoIps = <TData = AxiosResponse<null>>(
    contactId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/contacts/${contactId}/geoIps`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get Contact Notes
   */
  const getContactNotes = <TData = AxiosResponse<null>>(
    contactId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/contacts/${contactId}/notes`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get Contact Organization
   */
  const getContactOrganization = <TData = AxiosResponse<null>>(
    contactId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/contacts/${contactId}/organization`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get Contact Account Contacts
   */
  const getContactAccountContacts = <TData = AxiosResponse<null>>(
    contactId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/contacts/${contactId}/accountContacts`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get Contact Automation Entry Counts
   */
  const getContactAutomationEntryCounts = <TData = AxiosResponse<null>>(
    contactId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/contacts/${contactId}/automationEntryCounts`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get Contact Plus Append
   */
  const getContactPlusAppend = <TData = AxiosResponse<null>>(
    contactId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/contacts/${contactId}/plusAppend`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Get Contact Tracking Logs
   */
  const getContactTrackingLogs = <TData = AxiosResponse<null>>(
    contactId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/contacts/${contactId}/trackingLogs`, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Sync Contact Data
   */
  const syncContactData = <TData = AxiosResponse<null>>(
    syncContactDataRequest: SyncContactDataRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .post(`/contact/sync`, syncContactDataRequest, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Add contact to list
   */
  const addcontacttolist = <TData = AxiosResponse<null>>(
    addcontacttolistRequest: AddcontacttolistRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .post(`/contactLists`, addcontacttolistRequest, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Bulk Import
   */
  const bulkImport = <TData = AxiosResponse<null>>(
    bulkImportRequest: BulkImportRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .post(`/import/bulk_import`, bulkImportRequest, options)
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  /**
   * @summary Bulk Import Status List
   */
  const bulkImportStatusList = <TData = AxiosResponse<null>>(
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(`/import/bulk_import`, options).then((res) => {
      if (res.data === '') res.data = null;
      return res as TData;
    });
  };
  /**
   * @summary Bulk Import Status Info
   */
  const bulkImportStatusInfo = <TData = AxiosResponse<null>>(
    params: BulkImportStatusInfoParams,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default
      .get(`/import/info`, {
        ...options,
        params: { ...params, ...options?.params },
      })
      .then((res) => {
        if (res.data === '') res.data = null;
        return res as TData;
      });
  };
  return {
    getContacts,
    createContact,
    getContactbyID,
    deleteContact,
    getContactData,
    getContactTags,
    getContactBounceLogs,
    getContactDataGoals,
    getContactLists,
    getContactLogs,
    getContactDealList,
    getContactDeals,
    getContactFieldValues,
    getContactGeoIps,
    getContactNotes,
    getContactOrganization,
    getContactAccountContacts,
    getContactAutomationEntryCounts,
    getContactPlusAppend,
    getContactTrackingLogs,
    syncContactData,
    addcontacttolist,
    bulkImport,
    bulkImportStatusList,
    bulkImportStatusInfo,
  };
};
export type GetContactsResult = AxiosResponse<null>;
export type CreateContactResult = AxiosResponse<null>;
export type GetContactbyIDResult = AxiosResponse<null>;
export type DeleteContactResult = AxiosResponse<null>;
export type GetContactDataResult = AxiosResponse<null>;
export type GetContactTagsResult = AxiosResponse<null>;
export type GetContactBounceLogsResult = AxiosResponse<null>;
export type GetContactDataGoalsResult = AxiosResponse<null>;
export type GetContactListsResult = AxiosResponse<null>;
export type GetContactLogsResult = AxiosResponse<null>;
export type GetContactDealListResult = AxiosResponse<null>;
export type GetContactDealsResult = AxiosResponse<null>;
export type GetContactFieldValuesResult = AxiosResponse<null>;
export type GetContactGeoIpsResult = AxiosResponse<null>;
export type GetContactNotesResult = AxiosResponse<null>;
export type GetContactOrganizationResult = AxiosResponse<null>;
export type GetContactAccountContactsResult = AxiosResponse<null>;
export type GetContactAutomationEntryCountsResult = AxiosResponse<null>;
export type GetContactPlusAppendResult = AxiosResponse<null>;
export type GetContactTrackingLogsResult = AxiosResponse<null>;
export type SyncContactDataResult = AxiosResponse<null>;
export type AddcontacttolistResult = AxiosResponse<null>;
export type BulkImportResult = AxiosResponse<null>;
export type BulkImportStatusListResult = AxiosResponse<null>;
export type BulkImportStatusInfoResult = AxiosResponse<null>;
